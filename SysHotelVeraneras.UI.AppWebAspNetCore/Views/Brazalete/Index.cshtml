@model IEnumerable<SysHotelVeraneras.EntidadesDeNegocio.Brazalete>

@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);

    List<SysHotelVeraneras.EntidadesDeNegocio.Asignacion> asignaciones = ViewBag.Asignacion as List<SysHotelVeraneras.EntidadesDeNegocio.Asignacion>;
}

<div class="row text-right">
    <h1>Buscar</h1>

    <div class="row">
        <div class="col-md-12">
            <form asp-action="Index">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Color</label>
                            <input type="text" class="form-control" name="color" />
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class "control-label">Asignacion</label>
                            <select name="IdAsignacion" class="form-control">
                                <option selected value="0">SELECCIONAR</option>
                                @foreach (var item in asignaciones)
                                {
                                    <option value="@item.IdAsignacion">@item.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>
                 
                </div>

                <div class="form-group" style="margin-top: 10px;">

                    <button type="submit" class="btn btn-primary" style="background-color: #0074D9; color: white;">
                        <i class="fas fa-search"></i> Buscar
                    </button>
                    <button type="button" class="btn btn-success" onclick="window.location.href='@Url.Action("Create")'">
                        <i class="fas fa-plus"></i> Agregar
                    </button>
                 </div>

            </form>
        </div>
    </div>
</div>



<table id="miTabla" class="table table-responsive paginationjs">
    <thead>
        <tr>


            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Asignacion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cantidad)
            </th>

            <th colspan="3">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-page="@numPage">

                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Asignacion.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cantidad)
                </td>

                <td class="botonestabla">
                    <button type="button" class="btn btn-primary" style="background-color: #264DA0; color: white" onclick="window.location.href='@Url.Action("Edit", new { IdBrazalete = item.IdBrazalete })'">
                        <i class="fas fa-pencil-alt"></i> Modificar
                    </button>
                </td>


                <td class="botonestabla">
                    <button type="button" class="btn btn-info" onclick="window.location.href='@Url.Action("Details", new { IdBrazalete = item.IdBrazalete })'">
                        <i class="fas fa-eye"></i> Detalles
                    </button>
                </td>
                <td class="botonestabla">
                    <button type="button" class="btn btn-danger" onclick="window.location.href='@Url.Action("Delete", new { IdBrazalete = item.IdBrazalete })'">
                        <i class="fas fa-trash"></i> Eliminar
                    </button>
                </td>

            </tr>
            numRegistros++;
            if (numRegistros == numRegistrosPorPage)
            {
                numPage++;
                numRegistros = 0;
            }
        }
        @{
            if (numRegistros == 0)
            {
                numPage--;
            }
        }
    </tbody>
</table>

<button onclick="generarPDF()">Generar PDF desde la Tabla</button>


@if (numPage > 1)
{
    <div class="row" style="overflow:auto">
        <div class="col-md-12">
            <ul class="pagination paginationjs" data-numpage="@numPage" data-pageactive="1">
                <li class="page-item" data-typepage="Previous"><a class="page-link" href="#">Previous</a></li>
                @for (var i = 1; i <= numPage; i++)
                {
                    <li class="page-item" data-page="@i" data-typepage="Item"><a class="page-link" href="#">@i</a></li>
                }
                <li class="page-item" data-typepage="Next"><a class="page-link" href="#">Next</a></li>
            </ul>
        </div>
    </div>
}

<script src="https://raw.githack.com/eKoopmans/html2pdf/master/dist/html2pdf.bundle.js"></script>


<script>
    async function generarPDF() {
        const options = {
            margin: 10,
            filename: 'documento_desde_tabla.pdf',
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: { scale: 2 },
            jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
        };

        const content = document.getElementById('miTabla');

        try {
            const pdf = await html2pdf().from(content).set(options).outputPdf();
            window.open(pdf, '_blank');
        } catch (error) {
            console.error('Error al generar el PDF:', error);
        }
    }
</script>
